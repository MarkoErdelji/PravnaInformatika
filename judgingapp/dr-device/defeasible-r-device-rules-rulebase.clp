( ntm-deductiverule rule1-deductive ?gen16 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "SEVERE" ) ) ( not ( basic_punishment ( defendant ?Defendant ) ) ) => ( basic_punishment ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule1-support ( declare ( priority ( calc-defeasible-priority 5 [rule1] ) ) ) ?gen16 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "SEVERE" ) ) ?gen17 <- ( basic_punishment ( defendant ?Defendant ) ( positive-support $?gen19 & : ( not ( subseq-pos ( create$ rule1 ?gen16 $$$ $?gen19 ) ) ) ) ) ( test ( eq ( class ?gen17 ) basic_punishment ) ) => ( calc ( bind $?gen22 ( create$ rule1 ?gen16 $?gen19 ) ) ) ?gen17 <- ( basic_punishment ( positive-support $?gen22 ) ) )
( ntm-derivedattrule rule1-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule1] ) ) ) ?gen24 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "SEVERE" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ?gen17 <- ( basic_punishment ( defendant ?Defendant ) ( negative-support $?gen20 ) ( negative-overruled $?gen21 & : ( not ( subseq-pos ( create$ rule1-overruled $?gen20 $$$ $?gen21 ) ) ) ) ( positive-defeated $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ( test ( eq ( class ?gen17 ) basic_punishment ) ) => ( calc ( bind $?gen22 ( create$ rule1-overruled $?gen20 $?gen21 ) ) ) ?gen17 <- ( basic_punishment ( negative-overruled $?gen22 ) ) )
( ntm-derivedattrule rule1-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule1] ) ) ) ?gen17 <- ( basic_punishment ( defendant ?Defendant ) ( negative-support $?gen20 ) ( negative-overruled $?gen21 & : ( subseq-pos ( create$ rule1-overruled $?gen20 $$$ $?gen21 ) ) ) ) ( test ( eq ( class ?gen17 ) basic_punishment ) ) ( not ( and ?gen24 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "SEVERE" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ?gen17 <- ( basic_punishment ( positive-defeated $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ) ) => ( calc ( bind $?gen22 ( delete-member$ $?gen21 ( create$ rule1-overruled $?gen20 ) ) ) ) ?gen17 <- ( basic_punishment ( negative-overruled $?gen22 ) ) )
( ntm-derivedattrule rule1-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule1] ) ) ) ?gen24 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "SEVERE" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ?gen17 <- ( basic_punishment ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ( test ( eq ( class ?gen17 ) basic_punishment ) ) => ?gen17 <- ( basic_punishment ( positive 1 ) ( positive-derivator rule1 ?gen24 ) ) )
( ntm-derivedattrule rule1-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule1] ) ) ) ?gen17 <- ( basic_punishment ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule1 $? ) ) ( test ( eq ( class ?gen17 ) basic_punishment ) ) ( not ( and ?gen24 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "SEVERE" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ?gen17 <- ( basic_punishment ( negative ~ 2 ) ( positive-overruled $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ) ) => ?gen17 <- ( basic_punishment ( positive 0 ) ) )
( ntm-deductiverule rule2-deductive ?gen25 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:protectionMeasureViolation true ) ) ( not ( increase_punishment ( defendant ?Defendant ) ) ) => ( increase_punishment ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule2-support ( declare ( priority ( calc-defeasible-priority 5 [rule2] ) ) ) ?gen25 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:protectionMeasureViolation true ) ) ?gen26 <- ( increase_punishment ( defendant ?Defendant ) ( positive-support $?gen28 & : ( not ( subseq-pos ( create$ rule2 ?gen25 $$$ $?gen28 ) ) ) ) ) ( test ( eq ( class ?gen26 ) increase_punishment ) ) => ( calc ( bind $?gen31 ( create$ rule2 ?gen25 $?gen28 ) ) ) ?gen26 <- ( increase_punishment ( positive-support $?gen31 ) ) )
( ntm-derivedattrule rule2-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule2] ) ) ) ?gen33 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:protectionMeasureViolation true ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ?gen26 <- ( increase_punishment ( defendant ?Defendant ) ( negative-support $?gen29 ) ( negative-overruled $?gen30 & : ( not ( subseq-pos ( create$ rule2-overruled $?gen29 $$$ $?gen30 ) ) ) ) ( positive-defeated $?gen28 & : ( not ( member$ rule2 $?gen28 ) ) ) ) ( test ( eq ( class ?gen26 ) increase_punishment ) ) => ( calc ( bind $?gen31 ( create$ rule2-overruled $?gen29 $?gen30 ) ) ) ?gen26 <- ( increase_punishment ( negative-overruled $?gen31 ) ) )
( ntm-derivedattrule rule2-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule2] ) ) ) ?gen26 <- ( increase_punishment ( defendant ?Defendant ) ( negative-support $?gen29 ) ( negative-overruled $?gen30 & : ( subseq-pos ( create$ rule2-overruled $?gen29 $$$ $?gen30 ) ) ) ) ( test ( eq ( class ?gen26 ) increase_punishment ) ) ( not ( and ?gen33 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:protectionMeasureViolation true ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ?gen26 <- ( increase_punishment ( positive-defeated $?gen28 & : ( not ( member$ rule2 $?gen28 ) ) ) ) ) ) => ( calc ( bind $?gen31 ( delete-member$ $?gen30 ( create$ rule2-overruled $?gen29 ) ) ) ) ?gen26 <- ( increase_punishment ( negative-overruled $?gen31 ) ) )
( ntm-derivedattrule rule2-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule2] ) ) ) ?gen33 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:protectionMeasureViolation true ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ?gen26 <- ( increase_punishment ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen28 & : ( not ( member$ rule2 $?gen28 ) ) ) ) ( test ( eq ( class ?gen26 ) increase_punishment ) ) => ?gen26 <- ( increase_punishment ( positive 1 ) ( positive-derivator rule2 ?gen33 ) ) )
( ntm-derivedattrule rule2-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule2] ) ) ) ?gen26 <- ( increase_punishment ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule2 $? ) ) ( test ( eq ( class ?gen26 ) increase_punishment ) ) ( not ( and ?gen33 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:protectionMeasureViolation true ) ( positive ?gen32 & : ( >= ?gen32 1 ) ) ) ?gen26 <- ( increase_punishment ( negative ~ 2 ) ( positive-overruled $?gen28 & : ( not ( member$ rule2 $?gen28 ) ) ) ) ) ) => ?gen26 <- ( increase_punishment ( positive 0 ) ) )
( ntm-deductiverule rule3-deductive ?gen34 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:childrenPresent true ) ) ( not ( aggravating_factor ( defendant ?Defendant ) ) ) => ( aggravating_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule3-support ( declare ( priority ( calc-defeasible-priority 5 [rule3] ) ) ) ?gen34 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:childrenPresent true ) ) ?gen35 <- ( aggravating_factor ( defendant ?Defendant ) ( positive-support $?gen37 & : ( not ( subseq-pos ( create$ rule3 ?gen34 $$$ $?gen37 ) ) ) ) ) ( test ( eq ( class ?gen35 ) aggravating_factor ) ) => ( calc ( bind $?gen40 ( create$ rule3 ?gen34 $?gen37 ) ) ) ?gen35 <- ( aggravating_factor ( positive-support $?gen40 ) ) )
( ntm-derivedattrule rule3-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule3] ) ) ) ?gen42 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:childrenPresent true ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ?gen35 <- ( aggravating_factor ( defendant ?Defendant ) ( negative-support $?gen38 ) ( negative-overruled $?gen39 & : ( not ( subseq-pos ( create$ rule3-overruled $?gen38 $$$ $?gen39 ) ) ) ) ( positive-defeated $?gen37 & : ( not ( member$ rule3 $?gen37 ) ) ) ) ( test ( eq ( class ?gen35 ) aggravating_factor ) ) => ( calc ( bind $?gen40 ( create$ rule3-overruled $?gen38 $?gen39 ) ) ) ?gen35 <- ( aggravating_factor ( negative-overruled $?gen40 ) ) )
( ntm-derivedattrule rule3-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule3] ) ) ) ?gen35 <- ( aggravating_factor ( defendant ?Defendant ) ( negative-support $?gen38 ) ( negative-overruled $?gen39 & : ( subseq-pos ( create$ rule3-overruled $?gen38 $$$ $?gen39 ) ) ) ) ( test ( eq ( class ?gen35 ) aggravating_factor ) ) ( not ( and ?gen42 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:childrenPresent true ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ?gen35 <- ( aggravating_factor ( positive-defeated $?gen37 & : ( not ( member$ rule3 $?gen37 ) ) ) ) ) ) => ( calc ( bind $?gen40 ( delete-member$ $?gen39 ( create$ rule3-overruled $?gen38 ) ) ) ) ?gen35 <- ( aggravating_factor ( negative-overruled $?gen40 ) ) )
( ntm-derivedattrule rule3-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule3] ) ) ) ?gen42 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:childrenPresent true ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ?gen35 <- ( aggravating_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen37 & : ( not ( member$ rule3 $?gen37 ) ) ) ) ( test ( eq ( class ?gen35 ) aggravating_factor ) ) => ?gen35 <- ( aggravating_factor ( positive 1 ) ( positive-derivator rule3 ?gen42 ) ) )
( ntm-derivedattrule rule3-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule3] ) ) ) ?gen35 <- ( aggravating_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule3 $? ) ) ( test ( eq ( class ?gen35 ) aggravating_factor ) ) ( not ( and ?gen42 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:childrenPresent true ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ?gen35 <- ( aggravating_factor ( negative ~ 2 ) ( positive-overruled $?gen37 & : ( not ( member$ rule3 $?gen37 ) ) ) ) ) ) => ?gen35 <- ( aggravating_factor ( positive 0 ) ) )
( ntm-deductiverule rule4-deductive ?gen43 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:useOfWeapon true ) ) ( not ( weapon_factor ( defendant ?Defendant ) ) ) => ( weapon_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule4-support ( declare ( priority ( calc-defeasible-priority 5 [rule4] ) ) ) ?gen43 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:useOfWeapon true ) ) ?gen44 <- ( weapon_factor ( defendant ?Defendant ) ( positive-support $?gen46 & : ( not ( subseq-pos ( create$ rule4 ?gen43 $$$ $?gen46 ) ) ) ) ) ( test ( eq ( class ?gen44 ) weapon_factor ) ) => ( calc ( bind $?gen49 ( create$ rule4 ?gen43 $?gen46 ) ) ) ?gen44 <- ( weapon_factor ( positive-support $?gen49 ) ) )
( ntm-derivedattrule rule4-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule4] ) ) ) ?gen51 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:useOfWeapon true ) ( positive ?gen50 & : ( >= ?gen50 1 ) ) ) ?gen44 <- ( weapon_factor ( defendant ?Defendant ) ( negative-support $?gen47 ) ( negative-overruled $?gen48 & : ( not ( subseq-pos ( create$ rule4-overruled $?gen47 $$$ $?gen48 ) ) ) ) ( positive-defeated $?gen46 & : ( not ( member$ rule4 $?gen46 ) ) ) ) ( test ( eq ( class ?gen44 ) weapon_factor ) ) => ( calc ( bind $?gen49 ( create$ rule4-overruled $?gen47 $?gen48 ) ) ) ?gen44 <- ( weapon_factor ( negative-overruled $?gen49 ) ) )
( ntm-derivedattrule rule4-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule4] ) ) ) ?gen44 <- ( weapon_factor ( defendant ?Defendant ) ( negative-support $?gen47 ) ( negative-overruled $?gen48 & : ( subseq-pos ( create$ rule4-overruled $?gen47 $$$ $?gen48 ) ) ) ) ( test ( eq ( class ?gen44 ) weapon_factor ) ) ( not ( and ?gen51 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:useOfWeapon true ) ( positive ?gen50 & : ( >= ?gen50 1 ) ) ) ?gen44 <- ( weapon_factor ( positive-defeated $?gen46 & : ( not ( member$ rule4 $?gen46 ) ) ) ) ) ) => ( calc ( bind $?gen49 ( delete-member$ $?gen48 ( create$ rule4-overruled $?gen47 ) ) ) ) ?gen44 <- ( weapon_factor ( negative-overruled $?gen49 ) ) )
( ntm-derivedattrule rule4-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule4] ) ) ) ?gen51 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:useOfWeapon true ) ( positive ?gen50 & : ( >= ?gen50 1 ) ) ) ?gen44 <- ( weapon_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen46 & : ( not ( member$ rule4 $?gen46 ) ) ) ) ( test ( eq ( class ?gen44 ) weapon_factor ) ) => ?gen44 <- ( weapon_factor ( positive 1 ) ( positive-derivator rule4 ?gen51 ) ) )
( ntm-derivedattrule rule4-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule4] ) ) ) ?gen44 <- ( weapon_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule4 $? ) ) ( test ( eq ( class ?gen44 ) weapon_factor ) ) ( not ( and ?gen51 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:useOfWeapon true ) ( positive ?gen50 & : ( >= ?gen50 1 ) ) ) ?gen44 <- ( weapon_factor ( negative ~ 2 ) ( positive-overruled $?gen46 & : ( not ( member$ rule4 $?gen46 ) ) ) ) ) ) => ?gen44 <- ( weapon_factor ( positive 0 ) ) )
( ntm-deductiverule rule5-deductive ?gen52 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "SPOUSE" ) ) ( not ( family_offense_factor ( defendant ?Defendant ) ) ) => ( family_offense_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule5-support ( declare ( priority ( calc-defeasible-priority 5 [rule5] ) ) ) ?gen52 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "SPOUSE" ) ) ?gen53 <- ( family_offense_factor ( defendant ?Defendant ) ( positive-support $?gen55 & : ( not ( subseq-pos ( create$ rule5 ?gen52 $$$ $?gen55 ) ) ) ) ) ( test ( eq ( class ?gen53 ) family_offense_factor ) ) => ( calc ( bind $?gen58 ( create$ rule5 ?gen52 $?gen55 ) ) ) ?gen53 <- ( family_offense_factor ( positive-support $?gen58 ) ) )
( ntm-derivedattrule rule5-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule5] ) ) ) ?gen60 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "SPOUSE" ) ( positive ?gen59 & : ( >= ?gen59 1 ) ) ) ?gen53 <- ( family_offense_factor ( defendant ?Defendant ) ( negative-support $?gen56 ) ( negative-overruled $?gen57 & : ( not ( subseq-pos ( create$ rule5-overruled $?gen56 $$$ $?gen57 ) ) ) ) ( positive-defeated $?gen55 & : ( not ( member$ rule5 $?gen55 ) ) ) ) ( test ( eq ( class ?gen53 ) family_offense_factor ) ) => ( calc ( bind $?gen58 ( create$ rule5-overruled $?gen56 $?gen57 ) ) ) ?gen53 <- ( family_offense_factor ( negative-overruled $?gen58 ) ) )
( ntm-derivedattrule rule5-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule5] ) ) ) ?gen53 <- ( family_offense_factor ( defendant ?Defendant ) ( negative-support $?gen56 ) ( negative-overruled $?gen57 & : ( subseq-pos ( create$ rule5-overruled $?gen56 $$$ $?gen57 ) ) ) ) ( test ( eq ( class ?gen53 ) family_offense_factor ) ) ( not ( and ?gen60 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "SPOUSE" ) ( positive ?gen59 & : ( >= ?gen59 1 ) ) ) ?gen53 <- ( family_offense_factor ( positive-defeated $?gen55 & : ( not ( member$ rule5 $?gen55 ) ) ) ) ) ) => ( calc ( bind $?gen58 ( delete-member$ $?gen57 ( create$ rule5-overruled $?gen56 ) ) ) ) ?gen53 <- ( family_offense_factor ( negative-overruled $?gen58 ) ) )
( ntm-derivedattrule rule5-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule5] ) ) ) ?gen60 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "SPOUSE" ) ( positive ?gen59 & : ( >= ?gen59 1 ) ) ) ?gen53 <- ( family_offense_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen55 & : ( not ( member$ rule5 $?gen55 ) ) ) ) ( test ( eq ( class ?gen53 ) family_offense_factor ) ) => ?gen53 <- ( family_offense_factor ( positive 1 ) ( positive-derivator rule5 ?gen60 ) ) )
( ntm-derivedattrule rule5-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule5] ) ) ) ?gen53 <- ( family_offense_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule5 $? ) ) ( test ( eq ( class ?gen53 ) family_offense_factor ) ) ( not ( and ?gen60 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "SPOUSE" ) ( positive ?gen59 & : ( >= ?gen59 1 ) ) ) ?gen53 <- ( family_offense_factor ( negative ~ 2 ) ( positive-overruled $?gen55 & : ( not ( member$ rule5 $?gen55 ) ) ) ) ) ) => ?gen53 <- ( family_offense_factor ( positive 0 ) ) )
( ntm-deductiverule rule6-deductive ?gen61 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "CHILD" ) ) ( not ( child_victim_factor ( defendant ?Defendant ) ) ) => ( child_victim_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule6-support ( declare ( priority ( calc-defeasible-priority 5 [rule6] ) ) ) ?gen61 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "CHILD" ) ) ?gen62 <- ( child_victim_factor ( defendant ?Defendant ) ( positive-support $?gen64 & : ( not ( subseq-pos ( create$ rule6 ?gen61 $$$ $?gen64 ) ) ) ) ) ( test ( eq ( class ?gen62 ) child_victim_factor ) ) => ( calc ( bind $?gen67 ( create$ rule6 ?gen61 $?gen64 ) ) ) ?gen62 <- ( child_victim_factor ( positive-support $?gen67 ) ) )
( ntm-derivedattrule rule6-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule6] ) ) ) ?gen69 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "CHILD" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ?gen62 <- ( child_victim_factor ( defendant ?Defendant ) ( negative-support $?gen65 ) ( negative-overruled $?gen66 & : ( not ( subseq-pos ( create$ rule6-overruled $?gen65 $$$ $?gen66 ) ) ) ) ( positive-defeated $?gen64 & : ( not ( member$ rule6 $?gen64 ) ) ) ) ( test ( eq ( class ?gen62 ) child_victim_factor ) ) => ( calc ( bind $?gen67 ( create$ rule6-overruled $?gen65 $?gen66 ) ) ) ?gen62 <- ( child_victim_factor ( negative-overruled $?gen67 ) ) )
( ntm-derivedattrule rule6-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule6] ) ) ) ?gen62 <- ( child_victim_factor ( defendant ?Defendant ) ( negative-support $?gen65 ) ( negative-overruled $?gen66 & : ( subseq-pos ( create$ rule6-overruled $?gen65 $$$ $?gen66 ) ) ) ) ( test ( eq ( class ?gen62 ) child_victim_factor ) ) ( not ( and ?gen69 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "CHILD" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ?gen62 <- ( child_victim_factor ( positive-defeated $?gen64 & : ( not ( member$ rule6 $?gen64 ) ) ) ) ) ) => ( calc ( bind $?gen67 ( delete-member$ $?gen66 ( create$ rule6-overruled $?gen65 ) ) ) ) ?gen62 <- ( child_victim_factor ( negative-overruled $?gen67 ) ) )
( ntm-derivedattrule rule6-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule6] ) ) ) ?gen69 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "CHILD" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ?gen62 <- ( child_victim_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen64 & : ( not ( member$ rule6 $?gen64 ) ) ) ) ( test ( eq ( class ?gen62 ) child_victim_factor ) ) => ?gen62 <- ( child_victim_factor ( positive 1 ) ( positive-derivator rule6 ?gen69 ) ) )
( ntm-derivedattrule rule6-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule6] ) ) ) ?gen62 <- ( child_victim_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule6 $? ) ) ( test ( eq ( class ?gen62 ) child_victim_factor ) ) ( not ( and ?gen69 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:victimRelationship "CHILD" ) ( positive ?gen68 & : ( >= ?gen68 1 ) ) ) ?gen62 <- ( child_victim_factor ( negative ~ 2 ) ( positive-overruled $?gen64 & : ( not ( member$ rule6 $?gen64 ) ) ) ) ) ) => ?gen62 <- ( child_victim_factor ( positive 0 ) ) )
( ntm-deductiverule rule7-deductive ?gen70 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:previouslyConvicted true ) ) ( not ( recidivist_factor ( defendant ?Defendant ) ) ) => ( recidivist_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule7-support ( declare ( priority ( calc-defeasible-priority 5 [rule7] ) ) ) ?gen70 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:previouslyConvicted true ) ) ?gen71 <- ( recidivist_factor ( defendant ?Defendant ) ( positive-support $?gen73 & : ( not ( subseq-pos ( create$ rule7 ?gen70 $$$ $?gen73 ) ) ) ) ) ( test ( eq ( class ?gen71 ) recidivist_factor ) ) => ( calc ( bind $?gen76 ( create$ rule7 ?gen70 $?gen73 ) ) ) ?gen71 <- ( recidivist_factor ( positive-support $?gen76 ) ) )
( ntm-derivedattrule rule7-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule7] ) ) ) ?gen78 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:previouslyConvicted true ) ( positive ?gen77 & : ( >= ?gen77 1 ) ) ) ?gen71 <- ( recidivist_factor ( defendant ?Defendant ) ( negative-support $?gen74 ) ( negative-overruled $?gen75 & : ( not ( subseq-pos ( create$ rule7-overruled $?gen74 $$$ $?gen75 ) ) ) ) ( positive-defeated $?gen73 & : ( not ( member$ rule7 $?gen73 ) ) ) ) ( test ( eq ( class ?gen71 ) recidivist_factor ) ) => ( calc ( bind $?gen76 ( create$ rule7-overruled $?gen74 $?gen75 ) ) ) ?gen71 <- ( recidivist_factor ( negative-overruled $?gen76 ) ) )
( ntm-derivedattrule rule7-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule7] ) ) ) ?gen71 <- ( recidivist_factor ( defendant ?Defendant ) ( negative-support $?gen74 ) ( negative-overruled $?gen75 & : ( subseq-pos ( create$ rule7-overruled $?gen74 $$$ $?gen75 ) ) ) ) ( test ( eq ( class ?gen71 ) recidivist_factor ) ) ( not ( and ?gen78 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:previouslyConvicted true ) ( positive ?gen77 & : ( >= ?gen77 1 ) ) ) ?gen71 <- ( recidivist_factor ( positive-defeated $?gen73 & : ( not ( member$ rule7 $?gen73 ) ) ) ) ) ) => ( calc ( bind $?gen76 ( delete-member$ $?gen75 ( create$ rule7-overruled $?gen74 ) ) ) ) ?gen71 <- ( recidivist_factor ( negative-overruled $?gen76 ) ) )
( ntm-derivedattrule rule7-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule7] ) ) ) ?gen78 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:previouslyConvicted true ) ( positive ?gen77 & : ( >= ?gen77 1 ) ) ) ?gen71 <- ( recidivist_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen73 & : ( not ( member$ rule7 $?gen73 ) ) ) ) ( test ( eq ( class ?gen71 ) recidivist_factor ) ) => ?gen71 <- ( recidivist_factor ( positive 1 ) ( positive-derivator rule7 ?gen78 ) ) )
( ntm-derivedattrule rule7-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule7] ) ) ) ?gen71 <- ( recidivist_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule7 $? ) ) ( test ( eq ( class ?gen71 ) recidivist_factor ) ) ( not ( and ?gen78 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:previouslyConvicted true ) ( positive ?gen77 & : ( >= ?gen77 1 ) ) ) ?gen71 <- ( recidivist_factor ( negative ~ 2 ) ( positive-overruled $?gen73 & : ( not ( member$ rule7 $?gen73 ) ) ) ) ) ) => ?gen71 <- ( recidivist_factor ( positive 0 ) ) )
( ntm-deductiverule rule8-deductive ?gen79 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:numvictims ?NumVictims ) ) ( not ( multiple_victims_factor ( defendant ?Defendant ) ) ) => ( multiple_victims_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule8-support ( declare ( priority ( calc-defeasible-priority 5 [rule8] ) ) ) ?gen79 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:numvictims ?NumVictims ) ) ?gen80 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive-support $?gen82 & : ( not ( subseq-pos ( create$ rule8 ?gen79 $$$ $?gen82 ) ) ) ) ) ( test ( eq ( class ?gen80 ) multiple_victims_factor ) ) => ( calc ( bind $?gen85 ( create$ rule8 ?gen79 $?gen82 ) ) ) ?gen80 <- ( multiple_victims_factor ( positive-support $?gen85 ) ) )
( ntm-derivedattrule rule8-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule8] ) ) ) ?gen87 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:numvictims ?NumVictims ) ( positive ?gen86 & : ( >= ?gen86 1 ) ) ) ?gen80 <- ( multiple_victims_factor ( defendant ?Defendant ) ( negative-support $?gen83 ) ( negative-overruled $?gen84 & : ( not ( subseq-pos ( create$ rule8-overruled $?gen83 $$$ $?gen84 ) ) ) ) ( positive-defeated $?gen82 & : ( not ( member$ rule8 $?gen82 ) ) ) ) ( test ( eq ( class ?gen80 ) multiple_victims_factor ) ) => ( calc ( bind $?gen85 ( create$ rule8-overruled $?gen83 $?gen84 ) ) ) ?gen80 <- ( multiple_victims_factor ( negative-overruled $?gen85 ) ) )
( ntm-derivedattrule rule8-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule8] ) ) ) ?gen80 <- ( multiple_victims_factor ( defendant ?Defendant ) ( negative-support $?gen83 ) ( negative-overruled $?gen84 & : ( subseq-pos ( create$ rule8-overruled $?gen83 $$$ $?gen84 ) ) ) ) ( test ( eq ( class ?gen80 ) multiple_victims_factor ) ) ( not ( and ?gen87 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:numvictims ?NumVictims ) ( positive ?gen86 & : ( >= ?gen86 1 ) ) ) ?gen80 <- ( multiple_victims_factor ( positive-defeated $?gen82 & : ( not ( member$ rule8 $?gen82 ) ) ) ) ) ) => ( calc ( bind $?gen85 ( delete-member$ $?gen84 ( create$ rule8-overruled $?gen83 ) ) ) ) ?gen80 <- ( multiple_victims_factor ( negative-overruled $?gen85 ) ) )
( ntm-derivedattrule rule8-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule8] ) ) ) ?gen87 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:numvictims ?NumVictims ) ( positive ?gen86 & : ( >= ?gen86 1 ) ) ) ?gen80 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen82 & : ( not ( member$ rule8 $?gen82 ) ) ) ) ( test ( eq ( class ?gen80 ) multiple_victims_factor ) ) => ?gen80 <- ( multiple_victims_factor ( positive 1 ) ( positive-derivator rule8 ?gen87 ) ) )
( ntm-derivedattrule rule8-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule8] ) ) ) ?gen80 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule8 $? ) ) ( test ( eq ( class ?gen80 ) multiple_victims_factor ) ) ( not ( and ?gen87 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:numvictims ?NumVictims ) ( positive ?gen86 & : ( >= ?gen86 1 ) ) ) ?gen80 <- ( multiple_victims_factor ( negative ~ 2 ) ( positive-overruled $?gen82 & : ( not ( member$ rule8 $?gen82 ) ) ) ) ) ) => ?gen80 <- ( multiple_victims_factor ( positive 0 ) ) )
( ntm-deductiverule rule9-deductive ?gen88 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ) ?gen89 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ) ( not ( light_offense_factor ( defendant ?Defendant ) ) ) => ( light_offense_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule9-support ( declare ( priority ( calc-defeasible-priority 5 [rule9] ) ) ) ?gen88 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ) ?gen89 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( positive-support $?gen92 & : ( not ( subseq-pos ( create$ rule9 ?gen88 ?gen89 $$$ $?gen92 ) ) ) ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) => ( calc ( bind $?gen95 ( create$ rule9 ?gen88 ?gen89 $?gen92 ) ) ) ?gen90 <- ( light_offense_factor ( positive-support $?gen95 ) ) )
( ntm-derivedattrule rule9-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule9] ) ) ) ?gen97 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ?gen99 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( negative-support $?gen93 ) ( negative-overruled $?gen94 & : ( not ( subseq-pos ( create$ rule9-overruled $?gen93 $$$ $?gen94 ) ) ) ) ( positive-defeated $?gen92 & : ( not ( member$ rule9 $?gen92 ) ) ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) => ( calc ( bind $?gen95 ( create$ rule9-overruled $?gen93 $?gen94 ) ) ) ?gen90 <- ( light_offense_factor ( negative-overruled $?gen95 ) ) )
( ntm-derivedattrule rule9-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule9] ) ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( negative-support $?gen93 ) ( negative-overruled $?gen94 & : ( subseq-pos ( create$ rule9-overruled $?gen93 $$$ $?gen94 ) ) ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) ( not ( and ?gen97 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ?gen99 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ?gen90 <- ( light_offense_factor ( positive-defeated $?gen92 & : ( not ( member$ rule9 $?gen92 ) ) ) ) ) ) => ( calc ( bind $?gen95 ( delete-member$ $?gen94 ( create$ rule9-overruled $?gen93 ) ) ) ) ?gen90 <- ( light_offense_factor ( negative-overruled $?gen95 ) ) )
( ntm-derivedattrule rule9-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule9] ) ) ) ?gen97 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ?gen99 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen92 & : ( not ( member$ rule9 $?gen92 ) ) ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) => ?gen90 <- ( light_offense_factor ( positive 1 ) ( positive-derivator rule9 ?gen97 ?gen99 ) ) )
( ntm-derivedattrule rule9-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule9] ) ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule9 $? ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) ( not ( and ?gen97 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ?gen99 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ?gen90 <- ( light_offense_factor ( negative ~ 2 ) ( positive-overruled $?gen92 & : ( not ( member$ rule9 $?gen92 ) ) ) ) ) ) => ?gen90 <- ( light_offense_factor ( positive 0 ) ) )
( ntm-derivedattrule rule9-defeated ( declare ( priority ( calc-defeasible-priority 3 [rule9] ) ) ) ?gen97 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ?gen99 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( negative-defeated $?gen93 & : ( not ( subseq-pos ( create$ rule9-defeated rule1 rule6 rule8 $$$ $?gen93 ) ) ) ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) => ( calc ( bind $?gen92 ( create$ rule9-defeated rule1 rule6 rule8 $?gen93 ) ) ) ?gen90 <- ( light_offense_factor ( negative-defeated $?gen92 ) ) )
( ntm-derivedattrule rule9-defeated-dot ( declare ( priority ( calc-defeasible-priority -3 [rule9] ) ) ) ?gen90 <- ( light_offense_factor ( defendant ?Defendant ) ( negative-defeated $?gen93 & : ( subseq-pos ( create$ rule9-defeated rule1 rule6 rule8 $$$ $?gen93 ) ) ) ) ( test ( eq ( class ?gen90 ) light_offense_factor ) ) ( not ( and ?gen97 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "RECKLESS_BEHAVIOUR" ) ( positive ?gen96 & : ( >= ?gen96 1 ) ) ) ?gen99 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen98 & : ( >= ?gen98 1 ) ) ) ) ) => ( calc ( bind $?gen92 ( delete-member$ $?gen93 ( create$ rule9-defeated rule1 rule6 rule8 ) ) ) ) ?gen90 <- ( light_offense_factor ( negative-defeated $?gen92 ) ) )
( ntm-deductiverule rule10-deductive ?gen100 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ) ?gen101 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ) ( not ( threat_offense_factor ( defendant ?Defendant ) ) ) => ( threat_offense_factor ( defendant ?Defendant ) ) )
( ntm-derivedattrule rule10-support ( declare ( priority ( calc-defeasible-priority 5 [rule10] ) ) ) ?gen100 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ) ?gen101 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive-support $?gen104 & : ( not ( subseq-pos ( create$ rule10 ?gen100 ?gen101 $$$ $?gen104 ) ) ) ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) => ( calc ( bind $?gen107 ( create$ rule10 ?gen100 ?gen101 $?gen104 ) ) ) ?gen102 <- ( threat_offense_factor ( positive-support $?gen107 ) ) )
( ntm-derivedattrule rule10-overruled ( declare ( priority ( calc-defeasible-priority 2 [rule10] ) ) ) ?gen109 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ( positive ?gen108 & : ( >= ?gen108 1 ) ) ) ?gen111 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( negative-support $?gen105 ) ( negative-overruled $?gen106 & : ( not ( subseq-pos ( create$ rule10-overruled $?gen105 $$$ $?gen106 ) ) ) ) ( positive-defeated $?gen104 & : ( not ( member$ rule10 $?gen104 ) ) ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) => ( calc ( bind $?gen107 ( create$ rule10-overruled $?gen105 $?gen106 ) ) ) ?gen102 <- ( threat_offense_factor ( negative-overruled $?gen107 ) ) )
( ntm-derivedattrule rule10-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [rule10] ) ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( negative-support $?gen105 ) ( negative-overruled $?gen106 & : ( subseq-pos ( create$ rule10-overruled $?gen105 $$$ $?gen106 ) ) ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) ( not ( and ?gen109 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ( positive ?gen108 & : ( >= ?gen108 1 ) ) ) ?gen111 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ?gen102 <- ( threat_offense_factor ( positive-defeated $?gen104 & : ( not ( member$ rule10 $?gen104 ) ) ) ) ) ) => ( calc ( bind $?gen107 ( delete-member$ $?gen106 ( create$ rule10-overruled $?gen105 ) ) ) ) ?gen102 <- ( threat_offense_factor ( negative-overruled $?gen107 ) ) )
( ntm-derivedattrule rule10-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [rule10] ) ) ) ?gen109 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ( positive ?gen108 & : ( >= ?gen108 1 ) ) ) ?gen111 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen104 & : ( not ( member$ rule10 $?gen104 ) ) ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) => ?gen102 <- ( threat_offense_factor ( positive 1 ) ( positive-derivator rule10 ?gen109 ?gen111 ) ) )
( ntm-derivedattrule rule10-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [rule10] ) ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule10 $? ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) ( not ( and ?gen109 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ( positive ?gen108 & : ( >= ?gen108 1 ) ) ) ?gen111 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ?gen102 <- ( threat_offense_factor ( negative ~ 2 ) ( positive-overruled $?gen104 & : ( not ( member$ rule10 $?gen104 ) ) ) ) ) ) => ?gen102 <- ( threat_offense_factor ( positive 0 ) ) )
( ntm-derivedattrule rule10-defeated ( declare ( priority ( calc-defeasible-priority 3 [rule10] ) ) ) ?gen109 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ( positive ?gen108 & : ( >= ?gen108 1 ) ) ) ?gen111 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( negative-defeated $?gen105 & : ( not ( subseq-pos ( create$ rule10-defeated rule1 rule6 rule8 $$$ $?gen105 ) ) ) ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) => ( calc ( bind $?gen104 ( create$ rule10-defeated rule1 rule6 rule8 $?gen105 ) ) ) ?gen102 <- ( threat_offense_factor ( negative-defeated $?gen104 ) ) )
( ntm-derivedattrule rule10-defeated-dot ( declare ( priority ( calc-defeasible-priority -3 [rule10] ) ) ) ?gen102 <- ( threat_offense_factor ( defendant ?Defendant ) ( negative-defeated $?gen105 & : ( subseq-pos ( create$ rule10-defeated rule1 rule6 rule8 $$$ $?gen105 ) ) ) ) ( test ( eq ( class ?gen102 ) threat_offense_factor ) ) ( not ( and ?gen109 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:violenceNature "THREAT" ) ( positive ?gen108 & : ( >= ?gen108 1 ) ) ) ?gen111 <- ( lc:case ( lc:defendant ?Defendant ) ( lc:injuryTypes "NONE" ) ( positive ?gen110 & : ( >= ?gen110 1 ) ) ) ) ) => ( calc ( bind $?gen104 ( delete-member$ $?gen105 ( create$ rule10-defeated rule1 rule6 rule8 ) ) ) ) ?gen102 <- ( threat_offense_factor ( negative-defeated $?gen104 ) ) )
( ntm-deductiverule pen1-deductive ?gen112 <- ( basic_punishment ( defendant ?Defendant ) ) ( not ( imprisonment ( value 6 ) ) ) => ( imprisonment ( value 6 ) ) )
( ntm-derivedattrule pen1-support ( declare ( priority ( calc-defeasible-priority 5 [pen1] ) ) ) ?gen112 <- ( basic_punishment ( defendant ?Defendant ) ) ?gen113 <- ( imprisonment ( value 6 ) ( positive-support $?gen115 & : ( not ( subseq-pos ( create$ pen1 ?gen112 $$$ $?gen115 ) ) ) ) ) ( test ( eq ( class ?gen113 ) imprisonment ) ) => ( calc ( bind $?gen118 ( create$ pen1 ?gen112 $?gen115 ) ) ) ?gen113 <- ( imprisonment ( positive-support $?gen118 ) ) )
( ntm-derivedattrule pen1-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen1] ) ) ) ?gen120 <- ( basic_punishment ( defendant ?Defendant ) ( positive ?gen119 & : ( >= ?gen119 1 ) ) ) ?gen113 <- ( imprisonment ( value 6 ) ( negative-support $?gen116 ) ( negative-overruled $?gen117 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen116 $$$ $?gen117 ) ) ) ) ( positive-defeated $?gen115 & : ( not ( member$ pen1 $?gen115 ) ) ) ) ( test ( eq ( class ?gen113 ) imprisonment ) ) => ( calc ( bind $?gen118 ( create$ pen1-overruled $?gen116 $?gen117 ) ) ) ?gen113 <- ( imprisonment ( negative-overruled $?gen118 ) ) )
( ntm-derivedattrule pen1-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen1] ) ) ) ?gen113 <- ( imprisonment ( value 6 ) ( negative-support $?gen116 ) ( negative-overruled $?gen117 & : ( subseq-pos ( create$ pen1-overruled $?gen116 $$$ $?gen117 ) ) ) ) ( test ( eq ( class ?gen113 ) imprisonment ) ) ( not ( and ?gen120 <- ( basic_punishment ( defendant ?Defendant ) ( positive ?gen119 & : ( >= ?gen119 1 ) ) ) ?gen113 <- ( imprisonment ( positive-defeated $?gen115 & : ( not ( member$ pen1 $?gen115 ) ) ) ) ) ) => ( calc ( bind $?gen118 ( delete-member$ $?gen117 ( create$ pen1-overruled $?gen116 ) ) ) ) ?gen113 <- ( imprisonment ( negative-overruled $?gen118 ) ) )
( ntm-derivedattrule pen1-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen1] ) ) ) ?gen120 <- ( basic_punishment ( defendant ?Defendant ) ( positive ?gen119 & : ( >= ?gen119 1 ) ) ) ?gen113 <- ( imprisonment ( value 6 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen115 & : ( not ( member$ pen1 $?gen115 ) ) ) ) ( test ( eq ( class ?gen113 ) imprisonment ) ) => ?gen113 <- ( imprisonment ( positive 1 ) ( positive-derivator pen1 ?gen120 ) ) )
( ntm-derivedattrule pen1-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen1] ) ) ) ?gen113 <- ( imprisonment ( value 6 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen113 ) imprisonment ) ) ( not ( and ?gen120 <- ( basic_punishment ( defendant ?Defendant ) ( positive ?gen119 & : ( >= ?gen119 1 ) ) ) ?gen113 <- ( imprisonment ( negative ~ 2 ) ( positive-overruled $?gen115 & : ( not ( member$ pen1 $?gen115 ) ) ) ) ) ) => ?gen113 <- ( imprisonment ( positive 0 ) ) )
( ntm-deductiverule pen2-deductive ?gen121 <- ( increase_punishment ( defendant ?Defendant ) ) ( not ( fine ( value 5000 ) ) ) => ( fine ( value 5000 ) ) )
( ntm-derivedattrule pen2-support ( declare ( priority ( calc-defeasible-priority 5 [pen2] ) ) ) ?gen121 <- ( increase_punishment ( defendant ?Defendant ) ) ?gen122 <- ( fine ( value 5000 ) ( positive-support $?gen124 & : ( not ( subseq-pos ( create$ pen2 ?gen121 $$$ $?gen124 ) ) ) ) ) ( test ( eq ( class ?gen122 ) fine ) ) => ( calc ( bind $?gen127 ( create$ pen2 ?gen121 $?gen124 ) ) ) ?gen122 <- ( fine ( positive-support $?gen127 ) ) )
( ntm-derivedattrule pen2-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen2] ) ) ) ?gen129 <- ( increase_punishment ( defendant ?Defendant ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ?gen122 <- ( fine ( value 5000 ) ( negative-support $?gen125 ) ( negative-overruled $?gen126 & : ( not ( subseq-pos ( create$ pen2-overruled $?gen125 $$$ $?gen126 ) ) ) ) ( positive-defeated $?gen124 & : ( not ( member$ pen2 $?gen124 ) ) ) ) ( test ( eq ( class ?gen122 ) fine ) ) => ( calc ( bind $?gen127 ( create$ pen2-overruled $?gen125 $?gen126 ) ) ) ?gen122 <- ( fine ( negative-overruled $?gen127 ) ) )
( ntm-derivedattrule pen2-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen2] ) ) ) ?gen122 <- ( fine ( value 5000 ) ( negative-support $?gen125 ) ( negative-overruled $?gen126 & : ( subseq-pos ( create$ pen2-overruled $?gen125 $$$ $?gen126 ) ) ) ) ( test ( eq ( class ?gen122 ) fine ) ) ( not ( and ?gen129 <- ( increase_punishment ( defendant ?Defendant ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ?gen122 <- ( fine ( positive-defeated $?gen124 & : ( not ( member$ pen2 $?gen124 ) ) ) ) ) ) => ( calc ( bind $?gen127 ( delete-member$ $?gen126 ( create$ pen2-overruled $?gen125 ) ) ) ) ?gen122 <- ( fine ( negative-overruled $?gen127 ) ) )
( ntm-derivedattrule pen2-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen2] ) ) ) ?gen129 <- ( increase_punishment ( defendant ?Defendant ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ?gen122 <- ( fine ( value 5000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen124 & : ( not ( member$ pen2 $?gen124 ) ) ) ) ( test ( eq ( class ?gen122 ) fine ) ) => ?gen122 <- ( fine ( positive 1 ) ( positive-derivator pen2 ?gen129 ) ) )
( ntm-derivedattrule pen2-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen2] ) ) ) ?gen122 <- ( fine ( value 5000 ) ( positive 1 ) ( positive-derivator pen2 $? ) ) ( test ( eq ( class ?gen122 ) fine ) ) ( not ( and ?gen129 <- ( increase_punishment ( defendant ?Defendant ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ?gen122 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen124 & : ( not ( member$ pen2 $?gen124 ) ) ) ) ) ) => ?gen122 <- ( fine ( positive 0 ) ) )
( ntm-deductiverule pen3-deductive ?gen130 <- ( aggravating_factor ( defendant ?Defendant ) ) ( not ( fine ( value 10000 ) ) ) => ( fine ( value 10000 ) ) )
( ntm-derivedattrule pen3-support ( declare ( priority ( calc-defeasible-priority 5 [pen3] ) ) ) ?gen130 <- ( aggravating_factor ( defendant ?Defendant ) ) ?gen131 <- ( fine ( value 10000 ) ( positive-support $?gen133 & : ( not ( subseq-pos ( create$ pen3 ?gen130 $$$ $?gen133 ) ) ) ) ) ( test ( eq ( class ?gen131 ) fine ) ) => ( calc ( bind $?gen136 ( create$ pen3 ?gen130 $?gen133 ) ) ) ?gen131 <- ( fine ( positive-support $?gen136 ) ) )
( ntm-derivedattrule pen3-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen3] ) ) ) ?gen138 <- ( aggravating_factor ( defendant ?Defendant ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ?gen131 <- ( fine ( value 10000 ) ( negative-support $?gen134 ) ( negative-overruled $?gen135 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen134 $$$ $?gen135 ) ) ) ) ( positive-defeated $?gen133 & : ( not ( member$ pen3 $?gen133 ) ) ) ) ( test ( eq ( class ?gen131 ) fine ) ) => ( calc ( bind $?gen136 ( create$ pen3-overruled $?gen134 $?gen135 ) ) ) ?gen131 <- ( fine ( negative-overruled $?gen136 ) ) )
( ntm-derivedattrule pen3-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen3] ) ) ) ?gen131 <- ( fine ( value 10000 ) ( negative-support $?gen134 ) ( negative-overruled $?gen135 & : ( subseq-pos ( create$ pen3-overruled $?gen134 $$$ $?gen135 ) ) ) ) ( test ( eq ( class ?gen131 ) fine ) ) ( not ( and ?gen138 <- ( aggravating_factor ( defendant ?Defendant ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ?gen131 <- ( fine ( positive-defeated $?gen133 & : ( not ( member$ pen3 $?gen133 ) ) ) ) ) ) => ( calc ( bind $?gen136 ( delete-member$ $?gen135 ( create$ pen3-overruled $?gen134 ) ) ) ) ?gen131 <- ( fine ( negative-overruled $?gen136 ) ) )
( ntm-derivedattrule pen3-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen3] ) ) ) ?gen138 <- ( aggravating_factor ( defendant ?Defendant ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ?gen131 <- ( fine ( value 10000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen133 & : ( not ( member$ pen3 $?gen133 ) ) ) ) ( test ( eq ( class ?gen131 ) fine ) ) => ?gen131 <- ( fine ( positive 1 ) ( positive-derivator pen3 ?gen138 ) ) )
( ntm-derivedattrule pen3-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen3] ) ) ) ?gen131 <- ( fine ( value 10000 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen131 ) fine ) ) ( not ( and ?gen138 <- ( aggravating_factor ( defendant ?Defendant ) ( positive ?gen137 & : ( >= ?gen137 1 ) ) ) ?gen131 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen133 & : ( not ( member$ pen3 $?gen133 ) ) ) ) ) ) => ?gen131 <- ( fine ( positive 0 ) ) )
( ntm-deductiverule pen3-deductive ?gen139 <- ( weapon_factor ( defendant ?Defendant ) ) ( not ( fine ( value 10000 ) ) ) => ( fine ( value 10000 ) ) )
( ntm-derivedattrule pen3-support ( declare ( priority ( calc-defeasible-priority 5 [pen3] ) ) ) ?gen139 <- ( weapon_factor ( defendant ?Defendant ) ) ?gen140 <- ( fine ( value 10000 ) ( positive-support $?gen142 & : ( not ( subseq-pos ( create$ pen3 ?gen139 $$$ $?gen142 ) ) ) ) ) ( test ( eq ( class ?gen140 ) fine ) ) => ( calc ( bind $?gen145 ( create$ pen3 ?gen139 $?gen142 ) ) ) ?gen140 <- ( fine ( positive-support $?gen145 ) ) )
( ntm-derivedattrule pen3-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen3] ) ) ) ?gen147 <- ( weapon_factor ( defendant ?Defendant ) ( positive ?gen146 & : ( >= ?gen146 1 ) ) ) ?gen140 <- ( fine ( value 10000 ) ( negative-support $?gen143 ) ( negative-overruled $?gen144 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen143 $$$ $?gen144 ) ) ) ) ( positive-defeated $?gen142 & : ( not ( member$ pen3 $?gen142 ) ) ) ) ( test ( eq ( class ?gen140 ) fine ) ) => ( calc ( bind $?gen145 ( create$ pen3-overruled $?gen143 $?gen144 ) ) ) ?gen140 <- ( fine ( negative-overruled $?gen145 ) ) )
( ntm-derivedattrule pen3-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen3] ) ) ) ?gen140 <- ( fine ( value 10000 ) ( negative-support $?gen143 ) ( negative-overruled $?gen144 & : ( subseq-pos ( create$ pen3-overruled $?gen143 $$$ $?gen144 ) ) ) ) ( test ( eq ( class ?gen140 ) fine ) ) ( not ( and ?gen147 <- ( weapon_factor ( defendant ?Defendant ) ( positive ?gen146 & : ( >= ?gen146 1 ) ) ) ?gen140 <- ( fine ( positive-defeated $?gen142 & : ( not ( member$ pen3 $?gen142 ) ) ) ) ) ) => ( calc ( bind $?gen145 ( delete-member$ $?gen144 ( create$ pen3-overruled $?gen143 ) ) ) ) ?gen140 <- ( fine ( negative-overruled $?gen145 ) ) )
( ntm-derivedattrule pen3-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen3] ) ) ) ?gen147 <- ( weapon_factor ( defendant ?Defendant ) ( positive ?gen146 & : ( >= ?gen146 1 ) ) ) ?gen140 <- ( fine ( value 10000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen142 & : ( not ( member$ pen3 $?gen142 ) ) ) ) ( test ( eq ( class ?gen140 ) fine ) ) => ?gen140 <- ( fine ( positive 1 ) ( positive-derivator pen3 ?gen147 ) ) )
( ntm-derivedattrule pen3-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen3] ) ) ) ?gen140 <- ( fine ( value 10000 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen140 ) fine ) ) ( not ( and ?gen147 <- ( weapon_factor ( defendant ?Defendant ) ( positive ?gen146 & : ( >= ?gen146 1 ) ) ) ?gen140 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen142 & : ( not ( member$ pen3 $?gen142 ) ) ) ) ) ) => ?gen140 <- ( fine ( positive 0 ) ) )
( ntm-deductiverule pen3-deductive ?gen148 <- ( family_offense_factor ( defendant ?Defendant ) ) ( not ( fine ( value 10000 ) ) ) => ( fine ( value 10000 ) ) )
( ntm-derivedattrule pen3-support ( declare ( priority ( calc-defeasible-priority 5 [pen3] ) ) ) ?gen148 <- ( family_offense_factor ( defendant ?Defendant ) ) ?gen149 <- ( fine ( value 10000 ) ( positive-support $?gen151 & : ( not ( subseq-pos ( create$ pen3 ?gen148 $$$ $?gen151 ) ) ) ) ) ( test ( eq ( class ?gen149 ) fine ) ) => ( calc ( bind $?gen154 ( create$ pen3 ?gen148 $?gen151 ) ) ) ?gen149 <- ( fine ( positive-support $?gen154 ) ) )
( ntm-derivedattrule pen3-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen3] ) ) ) ?gen156 <- ( family_offense_factor ( defendant ?Defendant ) ( positive ?gen155 & : ( >= ?gen155 1 ) ) ) ?gen149 <- ( fine ( value 10000 ) ( negative-support $?gen152 ) ( negative-overruled $?gen153 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen152 $$$ $?gen153 ) ) ) ) ( positive-defeated $?gen151 & : ( not ( member$ pen3 $?gen151 ) ) ) ) ( test ( eq ( class ?gen149 ) fine ) ) => ( calc ( bind $?gen154 ( create$ pen3-overruled $?gen152 $?gen153 ) ) ) ?gen149 <- ( fine ( negative-overruled $?gen154 ) ) )
( ntm-derivedattrule pen3-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen3] ) ) ) ?gen149 <- ( fine ( value 10000 ) ( negative-support $?gen152 ) ( negative-overruled $?gen153 & : ( subseq-pos ( create$ pen3-overruled $?gen152 $$$ $?gen153 ) ) ) ) ( test ( eq ( class ?gen149 ) fine ) ) ( not ( and ?gen156 <- ( family_offense_factor ( defendant ?Defendant ) ( positive ?gen155 & : ( >= ?gen155 1 ) ) ) ?gen149 <- ( fine ( positive-defeated $?gen151 & : ( not ( member$ pen3 $?gen151 ) ) ) ) ) ) => ( calc ( bind $?gen154 ( delete-member$ $?gen153 ( create$ pen3-overruled $?gen152 ) ) ) ) ?gen149 <- ( fine ( negative-overruled $?gen154 ) ) )
( ntm-derivedattrule pen3-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen3] ) ) ) ?gen156 <- ( family_offense_factor ( defendant ?Defendant ) ( positive ?gen155 & : ( >= ?gen155 1 ) ) ) ?gen149 <- ( fine ( value 10000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen151 & : ( not ( member$ pen3 $?gen151 ) ) ) ) ( test ( eq ( class ?gen149 ) fine ) ) => ?gen149 <- ( fine ( positive 1 ) ( positive-derivator pen3 ?gen156 ) ) )
( ntm-derivedattrule pen3-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen3] ) ) ) ?gen149 <- ( fine ( value 10000 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen149 ) fine ) ) ( not ( and ?gen156 <- ( family_offense_factor ( defendant ?Defendant ) ( positive ?gen155 & : ( >= ?gen155 1 ) ) ) ?gen149 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen151 & : ( not ( member$ pen3 $?gen151 ) ) ) ) ) ) => ?gen149 <- ( fine ( positive 0 ) ) )
( ntm-deductiverule pen4-deductive ?gen157 <- ( child_victim_factor ( defendant ?Defendant ) ) ( not ( imprisonment ( value 12 ) ) ) => ( imprisonment ( value 12 ) ) )
( ntm-derivedattrule pen4-support ( declare ( priority ( calc-defeasible-priority 5 [pen4] ) ) ) ?gen157 <- ( child_victim_factor ( defendant ?Defendant ) ) ?gen158 <- ( imprisonment ( value 12 ) ( positive-support $?gen160 & : ( not ( subseq-pos ( create$ pen4 ?gen157 $$$ $?gen160 ) ) ) ) ) ( test ( eq ( class ?gen158 ) imprisonment ) ) => ( calc ( bind $?gen163 ( create$ pen4 ?gen157 $?gen160 ) ) ) ?gen158 <- ( imprisonment ( positive-support $?gen163 ) ) )
( ntm-derivedattrule pen4-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen4] ) ) ) ?gen165 <- ( child_victim_factor ( defendant ?Defendant ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ?gen158 <- ( imprisonment ( value 12 ) ( negative-support $?gen161 ) ( negative-overruled $?gen162 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen161 $$$ $?gen162 ) ) ) ) ( positive-defeated $?gen160 & : ( not ( member$ pen4 $?gen160 ) ) ) ) ( test ( eq ( class ?gen158 ) imprisonment ) ) => ( calc ( bind $?gen163 ( create$ pen4-overruled $?gen161 $?gen162 ) ) ) ?gen158 <- ( imprisonment ( negative-overruled $?gen163 ) ) )
( ntm-derivedattrule pen4-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen4] ) ) ) ?gen158 <- ( imprisonment ( value 12 ) ( negative-support $?gen161 ) ( negative-overruled $?gen162 & : ( subseq-pos ( create$ pen4-overruled $?gen161 $$$ $?gen162 ) ) ) ) ( test ( eq ( class ?gen158 ) imprisonment ) ) ( not ( and ?gen165 <- ( child_victim_factor ( defendant ?Defendant ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ?gen158 <- ( imprisonment ( positive-defeated $?gen160 & : ( not ( member$ pen4 $?gen160 ) ) ) ) ) ) => ( calc ( bind $?gen163 ( delete-member$ $?gen162 ( create$ pen4-overruled $?gen161 ) ) ) ) ?gen158 <- ( imprisonment ( negative-overruled $?gen163 ) ) )
( ntm-derivedattrule pen4-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen4] ) ) ) ?gen165 <- ( child_victim_factor ( defendant ?Defendant ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ?gen158 <- ( imprisonment ( value 12 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen160 & : ( not ( member$ pen4 $?gen160 ) ) ) ) ( test ( eq ( class ?gen158 ) imprisonment ) ) => ?gen158 <- ( imprisonment ( positive 1 ) ( positive-derivator pen4 ?gen165 ) ) )
( ntm-derivedattrule pen4-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen4] ) ) ) ?gen158 <- ( imprisonment ( value 12 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen158 ) imprisonment ) ) ( not ( and ?gen165 <- ( child_victim_factor ( defendant ?Defendant ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ?gen158 <- ( imprisonment ( negative ~ 2 ) ( positive-overruled $?gen160 & : ( not ( member$ pen4 $?gen160 ) ) ) ) ) ) => ?gen158 <- ( imprisonment ( positive 0 ) ) )
( ntm-deductiverule pen3-deductive ?gen166 <- ( recidivist_factor ( defendant ?Defendant ) ) ( not ( fine ( value 10000 ) ) ) => ( fine ( value 10000 ) ) )
( ntm-derivedattrule pen3-support ( declare ( priority ( calc-defeasible-priority 5 [pen3] ) ) ) ?gen166 <- ( recidivist_factor ( defendant ?Defendant ) ) ?gen167 <- ( fine ( value 10000 ) ( positive-support $?gen169 & : ( not ( subseq-pos ( create$ pen3 ?gen166 $$$ $?gen169 ) ) ) ) ) ( test ( eq ( class ?gen167 ) fine ) ) => ( calc ( bind $?gen172 ( create$ pen3 ?gen166 $?gen169 ) ) ) ?gen167 <- ( fine ( positive-support $?gen172 ) ) )
( ntm-derivedattrule pen3-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen3] ) ) ) ?gen174 <- ( recidivist_factor ( defendant ?Defendant ) ( positive ?gen173 & : ( >= ?gen173 1 ) ) ) ?gen167 <- ( fine ( value 10000 ) ( negative-support $?gen170 ) ( negative-overruled $?gen171 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen170 $$$ $?gen171 ) ) ) ) ( positive-defeated $?gen169 & : ( not ( member$ pen3 $?gen169 ) ) ) ) ( test ( eq ( class ?gen167 ) fine ) ) => ( calc ( bind $?gen172 ( create$ pen3-overruled $?gen170 $?gen171 ) ) ) ?gen167 <- ( fine ( negative-overruled $?gen172 ) ) )
( ntm-derivedattrule pen3-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen3] ) ) ) ?gen167 <- ( fine ( value 10000 ) ( negative-support $?gen170 ) ( negative-overruled $?gen171 & : ( subseq-pos ( create$ pen3-overruled $?gen170 $$$ $?gen171 ) ) ) ) ( test ( eq ( class ?gen167 ) fine ) ) ( not ( and ?gen174 <- ( recidivist_factor ( defendant ?Defendant ) ( positive ?gen173 & : ( >= ?gen173 1 ) ) ) ?gen167 <- ( fine ( positive-defeated $?gen169 & : ( not ( member$ pen3 $?gen169 ) ) ) ) ) ) => ( calc ( bind $?gen172 ( delete-member$ $?gen171 ( create$ pen3-overruled $?gen170 ) ) ) ) ?gen167 <- ( fine ( negative-overruled $?gen172 ) ) )
( ntm-derivedattrule pen3-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen3] ) ) ) ?gen174 <- ( recidivist_factor ( defendant ?Defendant ) ( positive ?gen173 & : ( >= ?gen173 1 ) ) ) ?gen167 <- ( fine ( value 10000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen169 & : ( not ( member$ pen3 $?gen169 ) ) ) ) ( test ( eq ( class ?gen167 ) fine ) ) => ?gen167 <- ( fine ( positive 1 ) ( positive-derivator pen3 ?gen174 ) ) )
( ntm-derivedattrule pen3-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen3] ) ) ) ?gen167 <- ( fine ( value 10000 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen167 ) fine ) ) ( not ( and ?gen174 <- ( recidivist_factor ( defendant ?Defendant ) ( positive ?gen173 & : ( >= ?gen173 1 ) ) ) ?gen167 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen169 & : ( not ( member$ pen3 $?gen169 ) ) ) ) ) ) => ?gen167 <- ( fine ( positive 0 ) ) )
( ntm-deductiverule pen5-deductive ?gen175 <- ( multiple_victims_factor ( defendant ?Defendant ) ) ( not ( imprisonment ( value 24 ) ) ) => ( imprisonment ( value 24 ) ) )
( ntm-derivedattrule pen5-support ( declare ( priority ( calc-defeasible-priority 5 [pen5] ) ) ) ?gen175 <- ( multiple_victims_factor ( defendant ?Defendant ) ) ?gen176 <- ( imprisonment ( value 24 ) ( positive-support $?gen178 & : ( not ( subseq-pos ( create$ pen5 ?gen175 $$$ $?gen178 ) ) ) ) ) ( test ( eq ( class ?gen176 ) imprisonment ) ) => ( calc ( bind $?gen181 ( create$ pen5 ?gen175 $?gen178 ) ) ) ?gen176 <- ( imprisonment ( positive-support $?gen181 ) ) )
( ntm-derivedattrule pen5-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen5] ) ) ) ?gen183 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive ?gen182 & : ( >= ?gen182 1 ) ) ) ?gen176 <- ( imprisonment ( value 24 ) ( negative-support $?gen179 ) ( negative-overruled $?gen180 & : ( not ( subseq-pos ( create$ pen5-overruled $?gen179 $$$ $?gen180 ) ) ) ) ( positive-defeated $?gen178 & : ( not ( member$ pen5 $?gen178 ) ) ) ) ( test ( eq ( class ?gen176 ) imprisonment ) ) => ( calc ( bind $?gen181 ( create$ pen5-overruled $?gen179 $?gen180 ) ) ) ?gen176 <- ( imprisonment ( negative-overruled $?gen181 ) ) )
( ntm-derivedattrule pen5-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen5] ) ) ) ?gen176 <- ( imprisonment ( value 24 ) ( negative-support $?gen179 ) ( negative-overruled $?gen180 & : ( subseq-pos ( create$ pen5-overruled $?gen179 $$$ $?gen180 ) ) ) ) ( test ( eq ( class ?gen176 ) imprisonment ) ) ( not ( and ?gen183 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive ?gen182 & : ( >= ?gen182 1 ) ) ) ?gen176 <- ( imprisonment ( positive-defeated $?gen178 & : ( not ( member$ pen5 $?gen178 ) ) ) ) ) ) => ( calc ( bind $?gen181 ( delete-member$ $?gen180 ( create$ pen5-overruled $?gen179 ) ) ) ) ?gen176 <- ( imprisonment ( negative-overruled $?gen181 ) ) )
( ntm-derivedattrule pen5-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen5] ) ) ) ?gen183 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive ?gen182 & : ( >= ?gen182 1 ) ) ) ?gen176 <- ( imprisonment ( value 24 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen178 & : ( not ( member$ pen5 $?gen178 ) ) ) ) ( test ( eq ( class ?gen176 ) imprisonment ) ) => ?gen176 <- ( imprisonment ( positive 1 ) ( positive-derivator pen5 ?gen183 ) ) )
( ntm-derivedattrule pen5-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen5] ) ) ) ?gen176 <- ( imprisonment ( value 24 ) ( positive 1 ) ( positive-derivator pen5 $? ) ) ( test ( eq ( class ?gen176 ) imprisonment ) ) ( not ( and ?gen183 <- ( multiple_victims_factor ( defendant ?Defendant ) ( positive ?gen182 & : ( >= ?gen182 1 ) ) ) ?gen176 <- ( imprisonment ( negative ~ 2 ) ( positive-overruled $?gen178 & : ( not ( member$ pen5 $?gen178 ) ) ) ) ) ) => ?gen176 <- ( imprisonment ( positive 0 ) ) )
( ntm-deductiverule pen6-deductive ?gen184 <- ( light_offense_factor ( defendant ?Defendant ) ) ( not ( fine ( value 2000 ) ) ) => ( fine ( value 2000 ) ) )
( ntm-derivedattrule pen6-support ( declare ( priority ( calc-defeasible-priority 5 [pen6] ) ) ) ?gen184 <- ( light_offense_factor ( defendant ?Defendant ) ) ?gen185 <- ( fine ( value 2000 ) ( positive-support $?gen187 & : ( not ( subseq-pos ( create$ pen6 ?gen184 $$$ $?gen187 ) ) ) ) ) ( test ( eq ( class ?gen185 ) fine ) ) => ( calc ( bind $?gen190 ( create$ pen6 ?gen184 $?gen187 ) ) ) ?gen185 <- ( fine ( positive-support $?gen190 ) ) )
( ntm-derivedattrule pen6-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen6] ) ) ) ?gen192 <- ( light_offense_factor ( defendant ?Defendant ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ?gen185 <- ( fine ( value 2000 ) ( negative-support $?gen188 ) ( negative-overruled $?gen189 & : ( not ( subseq-pos ( create$ pen6-overruled $?gen188 $$$ $?gen189 ) ) ) ) ( positive-defeated $?gen187 & : ( not ( member$ pen6 $?gen187 ) ) ) ) ( test ( eq ( class ?gen185 ) fine ) ) => ( calc ( bind $?gen190 ( create$ pen6-overruled $?gen188 $?gen189 ) ) ) ?gen185 <- ( fine ( negative-overruled $?gen190 ) ) )
( ntm-derivedattrule pen6-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen6] ) ) ) ?gen185 <- ( fine ( value 2000 ) ( negative-support $?gen188 ) ( negative-overruled $?gen189 & : ( subseq-pos ( create$ pen6-overruled $?gen188 $$$ $?gen189 ) ) ) ) ( test ( eq ( class ?gen185 ) fine ) ) ( not ( and ?gen192 <- ( light_offense_factor ( defendant ?Defendant ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ?gen185 <- ( fine ( positive-defeated $?gen187 & : ( not ( member$ pen6 $?gen187 ) ) ) ) ) ) => ( calc ( bind $?gen190 ( delete-member$ $?gen189 ( create$ pen6-overruled $?gen188 ) ) ) ) ?gen185 <- ( fine ( negative-overruled $?gen190 ) ) )
( ntm-derivedattrule pen6-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen6] ) ) ) ?gen192 <- ( light_offense_factor ( defendant ?Defendant ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ?gen185 <- ( fine ( value 2000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen187 & : ( not ( member$ pen6 $?gen187 ) ) ) ) ( test ( eq ( class ?gen185 ) fine ) ) => ?gen185 <- ( fine ( positive 1 ) ( positive-derivator pen6 ?gen192 ) ) )
( ntm-derivedattrule pen6-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen6] ) ) ) ?gen185 <- ( fine ( value 2000 ) ( positive 1 ) ( positive-derivator pen6 $? ) ) ( test ( eq ( class ?gen185 ) fine ) ) ( not ( and ?gen192 <- ( light_offense_factor ( defendant ?Defendant ) ( positive ?gen191 & : ( >= ?gen191 1 ) ) ) ?gen185 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen187 & : ( not ( member$ pen6 $?gen187 ) ) ) ) ) ) => ?gen185 <- ( fine ( positive 0 ) ) )
( ntm-deductiverule pen7-deductive ?gen193 <- ( threat_offense_factor ( defendant ?Defendant ) ) ( not ( fine ( value 3000 ) ) ) => ( fine ( value 3000 ) ) )
( ntm-derivedattrule pen7-support ( declare ( priority ( calc-defeasible-priority 5 [pen7] ) ) ) ?gen193 <- ( threat_offense_factor ( defendant ?Defendant ) ) ?gen194 <- ( fine ( value 3000 ) ( positive-support $?gen196 & : ( not ( subseq-pos ( create$ pen7 ?gen193 $$$ $?gen196 ) ) ) ) ) ( test ( eq ( class ?gen194 ) fine ) ) => ( calc ( bind $?gen199 ( create$ pen7 ?gen193 $?gen196 ) ) ) ?gen194 <- ( fine ( positive-support $?gen199 ) ) )
( ntm-derivedattrule pen7-overruled ( declare ( priority ( calc-defeasible-priority 2 [pen7] ) ) ) ?gen201 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive ?gen200 & : ( >= ?gen200 1 ) ) ) ?gen194 <- ( fine ( value 3000 ) ( negative-support $?gen197 ) ( negative-overruled $?gen198 & : ( not ( subseq-pos ( create$ pen7-overruled $?gen197 $$$ $?gen198 ) ) ) ) ( positive-defeated $?gen196 & : ( not ( member$ pen7 $?gen196 ) ) ) ) ( test ( eq ( class ?gen194 ) fine ) ) => ( calc ( bind $?gen199 ( create$ pen7-overruled $?gen197 $?gen198 ) ) ) ?gen194 <- ( fine ( negative-overruled $?gen199 ) ) )
( ntm-derivedattrule pen7-overruled-dot ( declare ( priority ( calc-defeasible-priority -2 [pen7] ) ) ) ?gen194 <- ( fine ( value 3000 ) ( negative-support $?gen197 ) ( negative-overruled $?gen198 & : ( subseq-pos ( create$ pen7-overruled $?gen197 $$$ $?gen198 ) ) ) ) ( test ( eq ( class ?gen194 ) fine ) ) ( not ( and ?gen201 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive ?gen200 & : ( >= ?gen200 1 ) ) ) ?gen194 <- ( fine ( positive-defeated $?gen196 & : ( not ( member$ pen7 $?gen196 ) ) ) ) ) ) => ( calc ( bind $?gen199 ( delete-member$ $?gen198 ( create$ pen7-overruled $?gen197 ) ) ) ) ?gen194 <- ( fine ( negative-overruled $?gen199 ) ) )
( ntm-derivedattrule pen7-defeasibly ( declare ( priority ( calc-defeasible-priority 1 [pen7] ) ) ) ?gen201 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive ?gen200 & : ( >= ?gen200 1 ) ) ) ?gen194 <- ( fine ( value 3000 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen196 & : ( not ( member$ pen7 $?gen196 ) ) ) ) ( test ( eq ( class ?gen194 ) fine ) ) => ?gen194 <- ( fine ( positive 1 ) ( positive-derivator pen7 ?gen201 ) ) )
( ntm-derivedattrule pen7-defeasibly-dot ( declare ( priority ( calc-defeasible-priority -1 [pen7] ) ) ) ?gen194 <- ( fine ( value 3000 ) ( positive 1 ) ( positive-derivator pen7 $? ) ) ( test ( eq ( class ?gen194 ) fine ) ) ( not ( and ?gen201 <- ( threat_offense_factor ( defendant ?Defendant ) ( positive ?gen200 & : ( >= ?gen200 1 ) ) ) ?gen194 <- ( fine ( negative ~ 2 ) ( positive-overruled $?gen196 & : ( not ( member$ pen7 $?gen196 ) ) ) ) ) ) => ?gen194 <- ( fine ( positive 0 ) ) )
